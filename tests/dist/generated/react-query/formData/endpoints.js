"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerPetstoreMSW = exports.getCreatePetsMock = exports.useCreatePets = exports.getCreatePetsMutationOptions = exports.createPets = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var react_query_1 = require("@tanstack/react-query");
var msw_1 = require("msw");
var faker_1 = require("@faker-js/faker");
var custom_instance_1 = require("../../../mutators/custom-instance");
/**
 * @summary Create a pet
 */
var createPets = function (createPetsBody) {
    var formData = new FormData();
    formData.append('name', createPetsBody.name);
    formData.append('tag', createPetsBody.tag);
    return (0, custom_instance_1.customInstance)({ url: "/pets", method: 'post',
        headers: { 'Content-Type': 'multipart/form-data', },
        data: formData });
};
exports.createPets = createPets;
var getCreatePetsMutationOptions = function (options) {
    var mutationOptions = (options !== null && options !== void 0 ? options : {}).mutation;
    var mutationFn = function (props) {
        var data = (props !== null && props !== void 0 ? props : {}).data;
        return (0, exports.createPets)(data);
    };
    return __assign({ mutationFn: mutationFn }, mutationOptions);
};
exports.getCreatePetsMutationOptions = getCreatePetsMutationOptions;
var useCreatePets = function (options) {
    var mutationOptions = (0, exports.getCreatePetsMutationOptions)(options);
    return (0, react_query_1.useMutation)(mutationOptions);
};
exports.useCreatePets = useCreatePets;
var getCreatePetsMock = function () { return ({ '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }); };
exports.getCreatePetsMock = getCreatePetsMock;
var getSwaggerPetstoreMSW = function () { return [
    msw_1.rest.post('*/pets', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getCreatePetsMock)()));
    }),
]; };
exports.getSwaggerPetstoreMSW = getSwaggerPetstoreMSW;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZ2VuZXJhdGVkL3JlYWN0LXF1ZXJ5L2Zvcm1EYXRhL2VuZHBvaW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztHQUtHO0FBQ0gscURBRThCO0FBVTlCLDJCQUVZO0FBQ1oseUNBRXdCO0FBQ3hCLHFFQUFtRTtBQUluRTs7R0FFRztBQUNJLElBQU0sVUFBVSxHQUFHLFVBQ3RCLGNBQThCO0lBQzNCLElBQU0sUUFBUSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7SUFDdkMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQzVDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUVwQyxPQUFPLElBQUEsZ0NBQWMsRUFDckIsRUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNO1FBQzdCLE9BQU8sRUFBRSxFQUFDLGNBQWMsRUFBRSxxQkFBcUIsR0FBRztRQUNqRCxJQUFJLEVBQUUsUUFBUSxFQUNoQixDQUNFLENBQUM7QUFDSixDQUFDLENBQUE7QUFaUSxRQUFBLFVBQVUsY0FZbEI7QUFJRSxJQUFNLDRCQUE0QixHQUFHLFVBRXBCLE9BQTRIO0lBRTVJLElBQVUsZUFBZSxHQUFJLENBQUEsT0FBTyxhQUFQLE9BQU8sY0FBUCxPQUFPLEdBQUksRUFBRSxDQUFBLFNBQWpCLENBQWtCO0lBSzdDLElBQU0sVUFBVSxHQUFxRixVQUFDLEtBQUs7UUFDaEcsSUFBQSxJQUFJLEdBQUksQ0FBQSxLQUFLLGFBQUwsS0FBSyxjQUFMLEtBQUssR0FBSSxFQUFFLENBQUEsS0FBZixDQUFnQjtRQUUzQixPQUFRLElBQUEsa0JBQVUsRUFBQyxJQUFJLENBQUUsQ0FBQTtJQUMzQixDQUFDLENBQUE7SUFLTixrQkFBVSxVQUFVLFlBQUEsSUFBSyxlQUFlLEVBQUU7QUFBQSxDQUFDLENBQUE7QUFsQmpDLFFBQUEsNEJBQTRCLGdDQWtCSztBQU1uQyxJQUFNLGFBQWEsR0FBRyxVQUVULE9BQTRIO0lBRzlJLElBQU0sZUFBZSxHQUFHLElBQUEsb0NBQTRCLEVBQUMsT0FBTyxDQUFDLENBQUM7SUFFOUQsT0FBTyxJQUFBLHlCQUFXLEVBQUMsZUFBZSxDQUFDLENBQUM7QUFDdEMsQ0FBQyxDQUFBO0FBUlksUUFBQSxhQUFhLGlCQVF6QjtBQUlFLElBQU0saUJBQWlCLEdBQUcsY0FBTSxPQUFBLENBQUMsRUFBQyxLQUFLLEVBQUUsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxhQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLGFBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsYUFBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLEVBQUUsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxhQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsYUFBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQyxFQUFFLFdBQVcsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLGFBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsS0FBSyxFQUFDLE1BQU0sRUFBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyw2QkFBNkIsRUFBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUEzZ0IsQ0FBMmdCLENBQUE7QUFBcmlCLFFBQUEsaUJBQWlCLHFCQUFvaEI7QUFFM2lCLElBQU0scUJBQXFCLEdBQUcsY0FBTSxPQUFBO0lBQzNDLFVBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHO1FBQzNCLE9BQU8sR0FBRyxDQUNSLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQ2YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsZUFBZSxDQUFDLEVBQzFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBQSx5QkFBaUIsR0FBRSxDQUFDLENBQ3BCLENBQUE7SUFDSCxDQUFDLENBQUM7Q0FBRSxFQVBpQyxDQU9qQyxDQUFBO0FBUEcsUUFBQSxxQkFBcUIseUJBT3hCIn0=