"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePostPets = exports.getPostPetsMutationOptions = exports.postPets = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var axios_1 = __importDefault(require("axios"));
var react_query_1 = require("@tanstack/react-query");
var postPets = function (options) {
    return axios_1.default.post("/pets", undefined, options);
};
exports.postPets = postPets;
var getPostPetsMutationOptions = function (options) {
    var _a = options !== null && options !== void 0 ? options : {}, mutationOptions = _a.mutation, axiosOptions = _a.axios;
    var mutationFn = function () {
        return (0, exports.postPets)(axiosOptions);
    };
    return __assign({ mutationFn: mutationFn }, mutationOptions);
};
exports.getPostPetsMutationOptions = getPostPetsMutationOptions;
var usePostPets = function (options) {
    var mutationOptions = (0, exports.getPostPetsMutationOptions)(options);
    return (0, react_query_1.useMutation)(mutationOptions);
};
exports.usePostPets = usePostPets;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZ2VuZXJhdGVkL3JlYWN0LXF1ZXJ5L2ltcG9ydEZyb21TdWJkaXJlY3RvcnkvZW5kcG9pbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7O0dBS0c7QUFDSCxnREFBeUI7QUFNekIscURBRThCO0FBVXZCLElBQU0sUUFBUSxHQUFHLFVBQ25CLE9BQTRCO0lBRTdCLE9BQU8sZUFBSyxDQUFDLElBQUksQ0FDZixPQUFPLEVBQUMsU0FBUyxFQUFDLE9BQU8sQ0FDMUIsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQU5VLFFBQUEsUUFBUSxZQU1sQjtBQUlJLElBQU0sMEJBQTBCLEdBQUcsVUFFbEIsT0FBd0k7SUFFekosSUFBQSxLQUFtRCxPQUFPLGFBQVAsT0FBTyxjQUFQLE9BQU8sR0FBSSxFQUFFLEVBQXJELGVBQWUsY0FBQSxFQUFTLFlBQVksV0FBaUIsQ0FBQztJQUtsRSxJQUFNLFVBQVUsR0FBdUU7UUFHbkYsT0FBUSxJQUFBLGdCQUFRLEVBQUMsWUFBWSxDQUFDLENBQUE7SUFDaEMsQ0FBQyxDQUFBO0lBS04sa0JBQVUsVUFBVSxZQUFBLElBQUssZUFBZSxFQUFFO0FBQUEsQ0FBQyxDQUFBO0FBbEJqQyxRQUFBLDBCQUEwQiw4QkFrQk87QUFNbkMsSUFBTSxXQUFXLEdBQUcsVUFFUCxPQUF3STtJQUcxSixJQUFNLGVBQWUsR0FBRyxJQUFBLGtDQUEwQixFQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRTVELE9BQU8sSUFBQSx5QkFBVyxFQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQTtBQVJZLFFBQUEsV0FBVyxlQVF2QiJ9