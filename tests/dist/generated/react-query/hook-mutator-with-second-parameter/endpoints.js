"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useHealthCheck = exports.useHealthCheckQueryOptions = exports.getHealthCheckQueryKey = exports.useHealthCheckHook = exports.useShowPetById = exports.useShowPetByIdQueryOptions = exports.getShowPetByIdQueryKey = exports.useShowPetByIdHook = exports.useCreatePets = exports.useCreatePetsMutationOptions = exports.useCreatePetsHook = exports.useListPets = exports.useListPetsQueryOptions = exports.getListPetsQueryKey = exports.useListPetsHook = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var react_query_1 = require("@tanstack/react-query");
var use_custom_instance_with_second_parameter_1 = require("../../../mutators/use-custom-instance-with-second-parameter");
/**
 * @summary List all pets
 */
var useListPetsHook = function () {
    var listPets = (0, use_custom_instance_with_second_parameter_1.useCustomInstance)();
    return function (params, options, signal) {
        return listPets({ url: "/pets", method: 'get', params: params, signal: signal
        }, options);
    };
};
exports.useListPetsHook = useListPetsHook;
var getListPetsQueryKey = function (params) { return __spreadArray(["/pets"], __read((params ? [params] : [])), false); };
exports.getListPetsQueryKey = getListPetsQueryKey;
var useListPetsQueryOptions = function (params, options) {
    var _a;
    var _b = options !== null && options !== void 0 ? options : {}, queryOptions = _b.query, requestOptions = _b.request;
    var queryKey = (_a = queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.queryKey) !== null && _a !== void 0 ? _a : (0, exports.getListPetsQueryKey)(params);
    var listPets = (0, exports.useListPetsHook)();
    var queryFn = function (_a) {
        var signal = _a.signal;
        return listPets(params, requestOptions, signal);
    };
    return __assign({ queryKey: queryKey, queryFn: queryFn }, queryOptions);
};
exports.useListPetsQueryOptions = useListPetsQueryOptions;
var useListPets = function (params, options) {
    var queryOptions = (0, exports.useListPetsQueryOptions)(params, options);
    var query = (0, react_query_1.useQuery)(queryOptions);
    query.queryKey = queryOptions.queryKey;
    return query;
};
exports.useListPets = useListPets;
/**
 * @summary Create a pet
 */
var useCreatePetsHook = function () {
    var createPets = (0, use_custom_instance_with_second_parameter_1.useCustomInstance)();
    return function (createPetsBody, params, options) {
        return createPets({ url: "/pets", method: 'post',
            headers: { 'Content-Type': 'application/json', },
            data: createPetsBody, params: params
        }, options);
    };
};
exports.useCreatePetsHook = useCreatePetsHook;
var useCreatePetsMutationOptions = function (options) {
    var _a = options !== null && options !== void 0 ? options : {}, mutationOptions = _a.mutation, requestOptions = _a.request;
    var createPets = (0, exports.useCreatePetsHook)();
    var mutationFn = function (props) {
        var _a = props !== null && props !== void 0 ? props : {}, data = _a.data, params = _a.params;
        return createPets(data, params, requestOptions);
    };
    return __assign({ mutationFn: mutationFn }, mutationOptions);
};
exports.useCreatePetsMutationOptions = useCreatePetsMutationOptions;
var useCreatePets = function (options) {
    var mutationOptions = (0, exports.useCreatePetsMutationOptions)(options);
    return (0, react_query_1.useMutation)(mutationOptions);
};
exports.useCreatePets = useCreatePets;
/**
 * @summary Info for a specific pet
 */
var useShowPetByIdHook = function () {
    var showPetById = (0, use_custom_instance_with_second_parameter_1.useCustomInstance)();
    return function (petId, options, signal) {
        return showPetById({ url: "/pets/".concat(petId), method: 'get', signal: signal
        }, options);
    };
};
exports.useShowPetByIdHook = useShowPetByIdHook;
var getShowPetByIdQueryKey = function (petId) { return ["/pets/".concat(petId)]; };
exports.getShowPetByIdQueryKey = getShowPetByIdQueryKey;
var useShowPetByIdQueryOptions = function (petId, options) {
    var _a;
    var _b = options !== null && options !== void 0 ? options : {}, queryOptions = _b.query, requestOptions = _b.request;
    var queryKey = (_a = queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.queryKey) !== null && _a !== void 0 ? _a : (0, exports.getShowPetByIdQueryKey)(petId);
    var showPetById = (0, exports.useShowPetByIdHook)();
    var queryFn = function (_a) {
        var signal = _a.signal;
        return showPetById(petId, requestOptions, signal);
    };
    return __assign({ queryKey: queryKey, queryFn: queryFn, enabled: !!(petId) }, queryOptions);
};
exports.useShowPetByIdQueryOptions = useShowPetByIdQueryOptions;
var useShowPetById = function (petId, options) {
    var queryOptions = (0, exports.useShowPetByIdQueryOptions)(petId, options);
    var query = (0, react_query_1.useQuery)(queryOptions);
    query.queryKey = queryOptions.queryKey;
    return query;
};
exports.useShowPetById = useShowPetById;
/**
 * @summary health check
 */
var useHealthCheckHook = function () {
    var healthCheck = (0, use_custom_instance_with_second_parameter_1.useCustomInstance)();
    return function (options, signal) {
        return healthCheck({ url: "/health", method: 'get', signal: signal
        }, options);
    };
};
exports.useHealthCheckHook = useHealthCheckHook;
var getHealthCheckQueryKey = function () { return ["/health"]; };
exports.getHealthCheckQueryKey = getHealthCheckQueryKey;
var useHealthCheckQueryOptions = function (options) {
    var _a;
    var _b = options !== null && options !== void 0 ? options : {}, queryOptions = _b.query, requestOptions = _b.request;
    var queryKey = (_a = queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.queryKey) !== null && _a !== void 0 ? _a : (0, exports.getHealthCheckQueryKey)();
    var healthCheck = (0, exports.useHealthCheckHook)();
    var queryFn = function (_a) {
        var signal = _a.signal;
        return healthCheck(requestOptions, signal);
    };
    return __assign({ queryKey: queryKey, queryFn: queryFn }, queryOptions);
};
exports.useHealthCheckQueryOptions = useHealthCheckQueryOptions;
var useHealthCheck = function (options) {
    var queryOptions = (0, exports.useHealthCheckQueryOptions)(options);
    var query = (0, react_query_1.useQuery)(queryOptions);
    query.queryKey = queryOptions.queryKey;
    return query;
};
exports.useHealthCheck = useHealthCheck;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZ2VuZXJhdGVkL3JlYWN0LXF1ZXJ5L2hvb2stbXV0YXRvci13aXRoLXNlY29uZC1wYXJhbWV0ZXIvZW5kcG9pbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztHQUtHO0FBQ0gscURBRzhCO0FBaUI5Qix5SEFBZ0c7QUFZaEc7O0dBRUc7QUFDSSxJQUFNLGVBQWUsR0FBRztJQUN2QixJQUFNLFFBQVEsR0FBRyxJQUFBLDZEQUFpQixHQUFRLENBQUM7SUFFM0MsT0FBTyxVQUNYLE1BQXNCLEVBQ3pCLE9BQStELEVBQUMsTUFBb0I7UUFFN0UsT0FBTyxRQUFRLENBQ2IsRUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQzlCLE1BQU0sUUFBQSxFQUFFLE1BQU0sUUFBQTtTQUNqQixFQUNLLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBYk0sUUFBQSxlQUFlLG1CQWFyQjtBQUdBLElBQU0sbUJBQW1CLEdBQUcsVUFBQyxNQUFzQixJQUFNLE9BQUEsZUFBQyxPQUFPLFVBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFVLEVBQTlDLENBQThDLENBQUM7QUFBbEcsUUFBQSxtQkFBbUIsdUJBQStFO0FBSXhHLElBQU0sdUJBQXVCLEdBQUcsVUFBa0YsTUFBc0IsRUFBRSxPQUE0Szs7SUFFdlQsSUFBQSxLQUFpRCxPQUFPLGFBQVAsT0FBTyxjQUFQLE9BQU8sR0FBSSxFQUFFLEVBQXRELFlBQVksV0FBQSxFQUFXLGNBQWMsYUFBaUIsQ0FBQztJQUVuRSxJQUFNLFFBQVEsR0FBSSxNQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FB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