/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * API
 * OpenAPI spec version: V1
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';
import type { UseQueryOptions, UseQueryResult, QueryKey } from '@tanstack/react-query';
import type { GetPolymorphicResponse200 } from './model';
export declare const getPolymorphicResponse: (options?: any) => Promise<AxiosResponse<GetPolymorphicResponse200>>;
export declare const getGetPolymorphicResponseQueryKey: () => readonly ["/demo"];
export declare const getGetPolymorphicResponseQueryOptions: <TData = any, TError = AxiosError<unknown>>(options?: {
    query?: any;
    axios?: any;
} | undefined) => any;
export declare type GetPolymorphicResponseQueryResult = NonNullable<Awaited<ReturnType<typeof getPolymorphicResponse>>>;
export declare type GetPolymorphicResponseQueryError = AxiosError<unknown>;
export declare const useGetPolymorphicResponse: <TData = any, TError = AxiosError<unknown>>(options?: {
    query?: any;
    axios?: any;
} | undefined) => any;
export declare const getGetPolymorphicResponseMock: () => {
    value: {} | undefined;
    key: string | undefined;
    type: string | undefined;
};
export declare const getApiMSW: () => any[];
//# sourceMappingURL=endpoints.d.ts.map