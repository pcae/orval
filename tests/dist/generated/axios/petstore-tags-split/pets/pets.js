"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPets = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var axios_1 = __importDefault(require("axios"));
var getPets = function () {
    /**
     * @summary List all pets
     */
    var listPets = function (params, version, options) {
        if (version === void 0) { version = 1; }
        return axios_1.default.get("/v".concat(version, "/pets"), __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
    };
    /**
     * @summary Create a pet
     */
    var createPets = function (createPetsBody, params, version, options) {
        if (version === void 0) { version = 1; }
        return axios_1.default.post("/v".concat(version, "/pets"), createPetsBody, __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
    };
    /**
     * @summary Info for a specific pet
     */
    var showPetById = function (petId, version, options) {
        if (version === void 0) { version = 1; }
        return axios_1.default.get("/v".concat(version, "/pets/").concat(petId), options);
    };
    return { listPets: listPets, createPets: createPets, showPetById: showPetById };
};
exports.getPets = getPets;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGV0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2dlbmVyYXRlZC9heGlvcy9wZXRzdG9yZS10YWdzLXNwbGl0L3BldHMvcGV0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztHQUtHO0FBQ0gsZ0RBQXlCO0FBZWhCLElBQU0sT0FBTyxHQUFHO0lBQ3pCOztPQUVHO0lBQ0gsSUFBTSxRQUFRLEdBQUcsVUFDYixNQUFzQixFQUN0QixPQUFVLEVBQUUsT0FBNEI7UUFBeEMsd0JBQUEsRUFBQSxXQUFVO1FBRVYsT0FBTyxlQUFLLENBQUMsR0FBRyxDQUNkLFlBQUssT0FBTyxVQUFPLHdCQUNsQixPQUFPLEtBQ04sTUFBTSx3QkFBTSxNQUFNLEdBQUssT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE1BQU0sS0FDekMsQ0FBQztJQUNKLENBQUMsQ0FBQTtJQUNIOztPQUVHO0lBQ0gsSUFBTSxVQUFVLEdBQUcsVUFDZixjQUE4QixFQUM5QixNQUF3QixFQUN4QixPQUFVLEVBQUUsT0FBNEI7UUFBeEMsd0JBQUEsRUFBQSxXQUFVO1FBRVYsT0FBTyxlQUFLLENBQUMsSUFBSSxDQUNmLFlBQUssT0FBTyxVQUFPLEVBQ25CLGNBQWMsd0JBQ2IsT0FBTyxLQUNOLE1BQU0sd0JBQU0sTUFBTSxHQUFLLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxNQUFNLEtBQ3pDLENBQUM7SUFDSixDQUFDLENBQUE7SUFDSDs7T0FFRztJQUNILElBQU0sV0FBVyxHQUFHLFVBQ2hCLEtBQWEsRUFDYixPQUFVLEVBQUUsT0FBNEI7UUFBeEMsd0JBQUEsRUFBQSxXQUFVO1FBRVYsT0FBTyxlQUFLLENBQUMsR0FBRyxDQUNkLFlBQUssT0FBTyxtQkFBUyxLQUFLLENBQUUsRUFBQyxPQUFPLENBQ3JDLENBQUM7SUFDSixDQUFDLENBQUE7SUFDSCxPQUFPLEVBQUMsUUFBUSxVQUFBLEVBQUMsVUFBVSxZQUFBLEVBQUMsV0FBVyxhQUFBLEVBQUMsQ0FBQTtBQUFBLENBQUMsQ0FBQztBQXhDM0IsUUFBQSxPQUFPLFdBd0NvQiJ9