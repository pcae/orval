"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerPetstoreMSW = exports.getHealthCheckMock = exports.getShowPetByIdMock = exports.getCreatePetsMock = exports.getListPetsMock = exports.useHealthCheck = exports.getHealthCheckKey = exports.healthCheck = exports.useShowPetById = exports.getShowPetByIdKey = exports.showPetById = exports.createPets = exports.useListPets = exports.getListPetsKey = exports.listPets = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var swr_1 = __importDefault(require("swr"));
var msw_1 = require("msw");
var faker_1 = require("@faker-js/faker");
var custom_client_1 = require("../../../mutators/custom-client");
/**
* @summary List all pets
*/
var listPets = function (params, version) {
    if (version === void 0) { version = 1; }
    return (0, custom_client_1.customClient)({ url: "/v".concat(version, "/pets"), method: 'get', params: params
    });
};
exports.listPets = listPets;
var getListPetsKey = function (params, version) {
    if (version === void 0) { version = 1; }
    return __spreadArray(["/v".concat(version, "/pets")], __read((params ? [params] : [])), false);
};
exports.getListPetsKey = getListPetsKey;
var useListPets = function (params, version, options) {
    var _a;
    if (version === void 0) { version = 1; }
    var swrOptions = (options !== null && options !== void 0 ? options : {}).swr;
    var isEnabled = (swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.enabled) !== false && !!(version);
    var swrKey = (_a = swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.swrKey) !== null && _a !== void 0 ? _a : (function () { return isEnabled ? (0, exports.getListPetsKey)(params, version) : null; });
    var swrFn = function () { return (0, exports.listPets)(params, version); };
    var query = (0, swr_1.default)(swrKey, swrFn, swrOptions);
    return __assign({ swrKey: swrKey }, query);
};
exports.useListPets = useListPets;
/**
 * @summary Create a pet
 */
var createPets = function (createPetsBody, params, version) {
    if (version === void 0) { version = 1; }
    return (0, custom_client_1.customClient)({ url: "/v".concat(version, "/pets"), method: 'post',
        headers: { 'Content-Type': 'application/json', },
        data: createPetsBody, params: params
    });
};
exports.createPets = createPets;
/**
 * @summary Info for a specific pet
 */
var showPetById = function (petId, version) {
    if (version === void 0) { version = 1; }
    return (0, custom_client_1.customClient)({ url: "/v".concat(version, "/pets/").concat(petId), method: 'get' });
};
exports.showPetById = showPetById;
var getShowPetByIdKey = function (petId, version) {
    if (version === void 0) { version = 1; }
    return ["/v".concat(version, "/pets/").concat(petId)];
};
exports.getShowPetByIdKey = getShowPetByIdKey;
var useShowPetById = function (petId, version, options) {
    var _a;
    if (version === void 0) { version = 1; }
    var swrOptions = (options !== null && options !== void 0 ? options : {}).swr;
    var isEnabled = (swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.enabled) !== false && !!(version && petId);
    var swrKey = (_a = swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.swrKey) !== null && _a !== void 0 ? _a : (function () { return isEnabled ? (0, exports.getShowPetByIdKey)(petId, version) : null; });
    var swrFn = function () { return (0, exports.showPetById)(petId, version); };
    var query = (0, swr_1.default)(swrKey, swrFn, swrOptions);
    return __assign({ swrKey: swrKey }, query);
};
exports.useShowPetById = useShowPetById;
/**
 * @summary health check
 */
var healthCheck = function (version) {
    if (version === void 0) { version = 1; }
    return (0, custom_client_1.customClient)({ url: "/v".concat(version, "/health"), method: 'get' });
};
exports.healthCheck = healthCheck;
var getHealthCheckKey = function (version) {
    if (version === void 0) { version = 1; }
    return ["/v".concat(version, "/health")];
};
exports.getHealthCheckKey = getHealthCheckKey;
var useHealthCheck = function (version, options) {
    var _a;
    if (version === void 0) { version = 1; }
    var swrOptions = (options !== null && options !== void 0 ? options : {}).swr;
    var isEnabled = (swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.enabled) !== false && !!(version);
    var swrKey = (_a = swrOptions === null || swrOptions === void 0 ? void 0 : swrOptions.swrKey) !== null && _a !== void 0 ? _a : (function () { return isEnabled ? (0, exports.getHealthCheckKey)(version) : null; });
    var swrFn = function () { return (0, exports.healthCheck)(version); };
    var query = (0, swr_1.default)(swrKey, swrFn, swrOptions);
    return __assign({ swrKey: swrKey }, query);
};
exports.useHealthCheck = useHealthCheck;
var getListPetsMock = function () { return (Array.from({ length: faker_1.faker.datatype.number({ min: 1, max: 10 }) }, function (_, i) { return i + 1; }).map(function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); })); };
exports.getListPetsMock = getListPetsMock;
var getCreatePetsMock = function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); };
exports.getCreatePetsMock = getCreatePetsMock;
var getShowPetByIdMock = function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); };
exports.getShowPetByIdMock = getShowPetByIdMock;
var getHealthCheckMock = function () { return (faker_1.faker.random.word()); };
exports.getHealthCheckMock = getHealthCheckMock;
var getSwaggerPetstoreMSW = function () { return [
    msw_1.rest.get('*/v:version/pets', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getListPetsMock)()));
    }), msw_1.rest.post('*/v:version/pets', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getCreatePetsMock)()));
    }), msw_1.rest.get('*/v:version/pets/:petId', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getShowPetByIdMock)()));
    }), msw_1.rest.get('*/v:version/health', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.text((0, exports.getHealthCheckMock)()));
    }),
]; };
exports.getSwaggerPetstoreMSW = getSwaggerPetstoreMSW;
//# sourceMappingURL=data:application/json;base64,