"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerPetstoreMSW = exports.getHealthCheckMock = exports.getShowPetByIdMock = exports.getCreatePetsMock = exports.getListPetsMock = exports.healthCheck = exports.showPetById = exports.createPets = exports.listPets = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var axios_1 = __importDefault(require("axios"));
var msw_1 = require("msw");
var faker_1 = require("@faker-js/faker");
/**
* @summary List all pets
*/
var listPets = function (params, version, options) {
    if (version === void 0) { version = 1; }
    return axios_1.default.get("/v".concat(version, "/pets"), __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.listPets = listPets;
/**
 * @summary Create a pet
 */
var createPets = function (createPetsBody, params, version, options) {
    if (version === void 0) { version = 1; }
    return axios_1.default.post("/v".concat(version, "/pets"), createPetsBody, __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.createPets = createPets;
/**
 * @summary Info for a specific pet
 */
var showPetById = function (petId, version, options) {
    if (version === void 0) { version = 1; }
    return axios_1.default.get("/v".concat(version, "/pets/").concat(petId), options);
};
exports.showPetById = showPetById;
/**
 * @summary health check
 */
var healthCheck = function (version, options) {
    if (version === void 0) { version = 1; }
    return axios_1.default.get("/v".concat(version, "/health"), options);
};
exports.healthCheck = healthCheck;
var getListPetsMock = function () { return (Array.from({ length: faker_1.faker.datatype.number({ min: 1, max: 10 }) }, function (_, i) { return i + 1; }).map(function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); })); };
exports.getListPetsMock = getListPetsMock;
var getCreatePetsMock = function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); };
exports.getCreatePetsMock = getCreatePetsMock;
var getShowPetByIdMock = function () { return (faker_1.faker.helpers.arrayElement([{ cuteness: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Labradoodle']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']) }, { length: faker_1.faker.datatype.number({ min: undefined, max: undefined }), breed: faker_1.faker.helpers.arrayElement(['Dachshund']), barksPerMinute: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['dog']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }, { petsRequested: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), type: faker_1.faker.helpers.arrayElement(['cat']), '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), email: faker_1.faker.helpers.arrayElement([faker_1.faker.internet.email(), undefined]), callingCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['+33', '+420', '+33']), undefined]), country: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(['People\'s Republic of China', 'Uruguay']), undefined]) }])); };
exports.getShowPetByIdMock = getShowPetByIdMock;
var getHealthCheckMock = function () { return (faker_1.faker.random.word()); };
exports.getHealthCheckMock = getHealthCheckMock;
var getSwaggerPetstoreMSW = function () { return [
    msw_1.rest.get('*/v:version/pets', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getListPetsMock)()));
    }), msw_1.rest.post('*/v:version/pets', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getCreatePetsMock)()));
    }), msw_1.rest.get('*/v:version/pets/:petId', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getShowPetByIdMock)()));
    }), msw_1.rest.get('*/v:version/health', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.text((0, exports.getHealthCheckMock)()));
    }),
]; };
exports.getSwaggerPetstoreMSW = getSwaggerPetstoreMSW;
//# sourceMappingURL=data:application/json;base64,