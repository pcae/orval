"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerPetstoreMSW = exports.getListPetsByAgeMock = exports.getListPetsByCountryMock = exports.listPetsByAge = exports.listPetsByCountry = void 0;
/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
var axios_1 = __importDefault(require("axios"));
var msw_1 = require("msw");
var faker_1 = require("@faker-js/faker");
var model_1 = require("./model");
/**
* @summary List all pets by country
*/
var listPetsByCountry = function (params, country, options) {
    if (country === void 0) { country = 'UY'; }
    return axios_1.default.get("/pets-by-country/".concat(country), __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.listPetsByCountry = listPetsByCountry;
/**
 * @summary List all pets by age
 */
var listPetsByAge = function (params, age, options) {
    if (age === void 0) { age = 5; }
    return axios_1.default.get("/pets-by-age/".concat(age), __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.listPetsByAge = listPetsByAge;
var getListPetsByCountryMock = function () { return (Array.from({ length: faker_1.faker.datatype.number({ min: 1, max: 10 }) }, function (_, i) { return i + 1; }).map(function () { return ({ '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), age: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), countryCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(Object.values(model_1.CountryCode)), undefined]) }); })); };
exports.getListPetsByCountryMock = getListPetsByCountryMock;
var getListPetsByAgeMock = function () { return (Array.from({ length: faker_1.faker.datatype.number({ min: 1, max: 10 }) }, function (_, i) { return i + 1; }).map(function () { return ({ '@id': faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), id: faker_1.faker.datatype.number({ min: undefined, max: undefined }), name: faker_1.faker.random.word(), tag: faker_1.faker.helpers.arrayElement([faker_1.faker.random.word(), undefined]), age: faker_1.faker.helpers.arrayElement([faker_1.faker.datatype.number({ min: undefined, max: undefined }), undefined]), countryCode: faker_1.faker.helpers.arrayElement([faker_1.faker.helpers.arrayElement(Object.values(model_1.CountryCode)), undefined]) }); })); };
exports.getListPetsByAgeMock = getListPetsByAgeMock;
var getSwaggerPetstoreMSW = function () { return [
    msw_1.rest.get('*/pets-by-country/:country', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getListPetsByCountryMock)()));
    }), msw_1.rest.get('*/pets-by-age/:age', function (_req, res, ctx) {
        return res(ctx.delay(1000), ctx.status(200, 'Mocked status'), ctx.json((0, exports.getListPetsByAgeMock)()));
    }),
]; };
exports.getSwaggerPetstoreMSW = getSwaggerPetstoreMSW;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZ2VuZXJhdGVkL2RlZmF1bHQvZW5kcG9pbnQtcGFyYW1ldGVycy9lbmRwb2ludHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7R0FLRztBQUNILGdEQUF5QjtBQVV6QiwyQkFFWTtBQUNaLHlDQUV3QjtBQUN4QixpQ0FFZ0I7QUFLZDs7RUFFQztBQUNJLElBQU0saUJBQWlCLEdBQUcsVUFDN0IsTUFBZ0MsRUFDaEMsT0FBYSxFQUFFLE9BQTRCO0lBQTNDLHdCQUFBLEVBQUEsY0FBYTtJQUViLE9BQU8sZUFBSyxDQUFDLEdBQUcsQ0FDZCwyQkFBb0IsT0FBTyxDQUFFLHdCQUM1QixPQUFPLEtBQ04sTUFBTSx3QkFBTSxNQUFNLEdBQUssT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE1BQU0sS0FDekMsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQVRVLFFBQUEsaUJBQWlCLHFCQVMzQjtBQUVIOztHQUVHO0FBQ0ksSUFBTSxhQUFhLEdBQUcsVUFDekIsTUFBNEIsRUFDNUIsR0FBTSxFQUFFLE9BQTRCO0lBQXBDLG9CQUFBLEVBQUEsT0FBTTtJQUVOLE9BQU8sZUFBSyxDQUFDLEdBQUcsQ0FDZCx1QkFBZ0IsR0FBRyxDQUFFLHdCQUNwQixPQUFPLEtBQ04sTUFBTSx3QkFBTSxNQUFNLEdBQUssT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE1BQU0sS0FDekMsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQVRVLFFBQUEsYUFBYSxpQkFTdkI7QUFNSSxJQUFNLHdCQUF3QixHQUFHLGNBQU0sT0FBQSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsYUFBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxF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